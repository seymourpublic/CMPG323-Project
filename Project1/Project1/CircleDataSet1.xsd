<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="CircleDataSet1" targetNamespace="http://tempuri.org/CircleDataSet1.xsd" xmlns:mstns="http://tempuri.org/CircleDataSet1.xsd" xmlns="http://tempuri.org/CircleDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CircleConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CircleConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Project1.Properties.Settings.GlobalReference.Default.CircleConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TextbooksTableAdapter" GeneratorDataComponentClassName="TextbooksTableAdapter" Name="Textbooks" UserDataComponentName="TextbooksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CircleConnectionString (Settings)" DbObjectName="dbo.Textbooks" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Textbooks] WHERE (([Textbook No] = @Original_Textbook_No) AND ([Name] = @Original_Name) AND ([Module code] = @Original_Module_code) AND ([Quantity] = @Original_Quantity) AND ([Price] = @Original_Price))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Textbook_No" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Textbook No" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Module_code" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Module code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Textbooks] ([Name], [Module code], [Quantity], [Price]) VALUES (@Name, @Module_code, @Quantity, @Price);
SELECT [Textbook No], Name, [Module code], Quantity, Price FROM Textbooks WHERE ([Textbook No] = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Module_code" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Module code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [Textbook No], Name, [Module code], Quantity, Price FROM dbo.Textbooks</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Textbooks] SET [Name] = @Name, [Module code] = @Module_code, [Quantity] = @Quantity, [Price] = @Price WHERE (([Textbook No] = @Original_Textbook_No) AND ([Name] = @Original_Name) AND ([Module code] = @Original_Module_code) AND ([Quantity] = @Original_Quantity) AND ([Price] = @Original_Price));
SELECT [Textbook No], Name, [Module code], Quantity, Price FROM Textbooks WHERE ([Textbook No] = @Textbook_No)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Module_code" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Module code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Price" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Textbook_No" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Textbook No" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Module_code" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Module code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Single" Direction="Input" ParameterName="@Original_Price" Precision="0" ProviderType="Real" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Textbook_No" ColumnName="Textbook No" DataSourceName="[C:\USERS\SCHAVES\DESKTOP\PROJECT1\PROJECT1\CIRCLE.MDF].dbo.Textbooks" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Textbook_No" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Textbook No" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Textbook No" DataSetColumn="Textbook No" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Module code" DataSetColumn="Module code" />
              <Mapping SourceColumn="Quantity" DataSetColumn="Quantity" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="CircleDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="CircleDataSet1" msprop:Generator_UserDSName="CircleDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Textbooks" msprop:Generator_TableClassName="TextbooksDataTable" msprop:Generator_TableVarName="tableTextbooks" msprop:Generator_TablePropName="Textbooks" msprop:Generator_RowDeletingName="TextbooksRowDeleting" msprop:Generator_RowChangingName="TextbooksRowChanging" msprop:Generator_RowEvHandlerName="TextbooksRowChangeEventHandler" msprop:Generator_RowDeletedName="TextbooksRowDeleted" msprop:Generator_UserTableName="Textbooks" msprop:Generator_RowChangedName="TextbooksRowChanged" msprop:Generator_RowEvArgName="TextbooksRowChangeEvent" msprop:Generator_RowClassName="TextbooksRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Textbook_x0020_No" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTextbook_No" msprop:Generator_ColumnPropNameInRow="Textbook_No" msprop:Generator_ColumnPropNameInTable="Textbook_NoColumn" msprop:Generator_UserColumnName="Textbook No" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Module_x0020_code" msprop:Generator_ColumnVarNameInTable="columnModule_code" msprop:Generator_ColumnPropNameInRow="Module_code" msprop:Generator_ColumnPropNameInTable="Module_codeColumn" msprop:Generator_UserColumnName="Module code">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Quantity" msprop:Generator_ColumnVarNameInTable="columnQuantity" msprop:Generator_ColumnPropNameInRow="Quantity" msprop:Generator_ColumnPropNameInTable="QuantityColumn" msprop:Generator_UserColumnName="Quantity" type="xs:int" />
              <xs:element name="Price" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_UserColumnName="Price" type="xs:float" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Textbooks" />
      <xs:field xpath="mstns:Textbook_x0020_No" />
    </xs:unique>
  </xs:element>
</xs:schema>